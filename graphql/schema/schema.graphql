
schema {
  query: Query
  mutation: Mutation
}

type Query {
  todo: TodoQuery
}

type TodoQuery {
  todo(code: ID!): Todo!
  user(code: ID!): User!
  allTodos: [Todo!]!
  allUsers: [User!]!
}

type Mutation {
  todo: TodoMutation
}

type TodoMutation {
  createTodo(input: CreateTodo!): Todo!
  updateTodo(input: UpdateTodo!): Todo!
  createUser(input: CreateUser!): User!
  updateUser(input: UpdateUser!): User!
}

input CreateTodo {
  description: String!
  userId: Int!
}

input UpdateTodo {
  id: ID!
  description: String
  status: TodoStatus
}

input CreateUser {
  name: String!
}

input UpdateUser {
  id: ID!
  name: String
}



type Todo {
  id: ID!
  description: String!
  status: TodoStatus!
  user: User!
}

enum TodoStatus {
  PENDING
  CANCELLED
  DONE
}

type User {
  id: ID!
  name: String!
  todos: [Todo!]!
}






